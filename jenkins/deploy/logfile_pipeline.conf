input {
	file {
		path => "/api.log"
		start_position => "beginning"
		id => "backend_input"
		add_field => { "from_app" => "backend" }
		codec => multiline {
			pattern => "%{SPACE} at %{GREEDYDATA}"
			negate => false
			what => "previous"
			}
		}
	}

filter {
	mutate {
		rename => {"host" => "hostname"}
		}
	grok {
		match => {
			"message" => [
				"- \[%{TIMESTAMP:timestamp}\] \[%{LOGLEVEL:level}\] :: %{WORD:verb} \| %{UNIXPATH:route} \| query_parameters: ?%{GREEDYDATA:query_parameters} \| headers: ?%{GREEDYDATA:headers}",
				"- \[%{TIMESTAMP:timestamp}\] \[%{LOGLEVEL:level}\] :: %{WORD:verb} \| %{UNIXPATH:route} \| body: ?%{GREEDYDATA:body}",
				"- \[%{TIMESTAMP:timestamp}\] \[%{LOGLEVEL:level}\] :: %{WORD:verb} \| %{UNIXPATH:route} \| method_name: ?%{DATA:method_name} \| method_parameters: ?%{GREEDYDATA:method_parameters}",
				"- \[%{TIMESTAMP:timestamp}\] \[%{LOGLEVEL:level}\] :: %{WORD:verb} \| %{UNIXPATH:route} \| query: %{GREEDYDATA:query}",
				"- \[%{TIMESTAMP:timestamp}\] \[%{LOGLEVEL:level}\] :: %{WORD:verb} \| error_message: ?%{DATA:error_message} \| stack_trace: ?%{GREEDYDATA:stack_trace}\n(?m)%{GREEDYDATA:stack_trace}",
				"- \[%{TIMESTAMP:timestamp}\] \[%{LOGLEVEL:level}\] :: %{WORD:verb} \| %{UNIXPATH:route} \| validation_error: %{GREEDYDATA:validation_error}"
				]
			}
		pattern_definitions => {
			"TIMESTAMP" => "(?:%{INT}-%{INT}-%{INT} %{INT}:%{INT}:%{INT}.%{INT})"
			}
		}
	}

output {
	elasticsearch {
		hosts => "192.168.113.132:9200"
		data_stream => "true"
		id => "backend_output"
		}
	}
